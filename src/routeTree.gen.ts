/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as FaqImport } from './routes/faq'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as GuidesIndexImport } from './routes/guides/index'
import { Route as GuidesCreateImport } from './routes/guides/create'
import { Route as GuidesGuideIdImport } from './routes/guides/$guideId'
import { Route as GuidesGuideIdEditImport } from './routes/guides/$guideId_.edit'
import { Route as GuidesGuideIdEntriesIndexImport } from './routes/guides/$guideId_/entries/index'
import { Route as GuidesGuideIdEntriesCreateImport } from './routes/guides/$guideId_/entries/create'
import { Route as GuidesGuideIdEntriesEntryIdImport } from './routes/guides/$guideId_/entries/$entryId'
import { Route as GuidesGuideIdEntriesEntryIdEditImport } from './routes/guides/$guideId_/entries/$entryId_.edit'

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const FaqRoute = FaqImport.update({
  id: '/faq',
  path: '/faq',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const GuidesIndexRoute = GuidesIndexImport.update({
  id: '/guides/',
  path: '/guides/',
  getParentRoute: () => rootRoute,
} as any)

const GuidesCreateRoute = GuidesCreateImport.update({
  id: '/guides/create',
  path: '/guides/create',
  getParentRoute: () => rootRoute,
} as any)

const GuidesGuideIdRoute = GuidesGuideIdImport.update({
  id: '/guides/$guideId',
  path: '/guides/$guideId',
  getParentRoute: () => rootRoute,
} as any)

const GuidesGuideIdEditRoute = GuidesGuideIdEditImport.update({
  id: '/guides/$guideId_/edit',
  path: '/guides/$guideId/edit',
  getParentRoute: () => rootRoute,
} as any)

const GuidesGuideIdEntriesIndexRoute = GuidesGuideIdEntriesIndexImport.update({
  id: '/guides/$guideId_/entries/',
  path: '/guides/$guideId/entries/',
  getParentRoute: () => rootRoute,
} as any)

const GuidesGuideIdEntriesCreateRoute = GuidesGuideIdEntriesCreateImport.update(
  {
    id: '/guides/$guideId_/entries/create',
    path: '/guides/$guideId/entries/create',
    getParentRoute: () => rootRoute,
  } as any,
)

const GuidesGuideIdEntriesEntryIdRoute =
  GuidesGuideIdEntriesEntryIdImport.update({
    id: '/guides/$guideId_/entries/$entryId',
    path: '/guides/$guideId/entries/$entryId',
    getParentRoute: () => rootRoute,
  } as any)

const GuidesGuideIdEntriesEntryIdEditRoute =
  GuidesGuideIdEntriesEntryIdEditImport.update({
    id: '/guides/$guideId_/entries/$entryId_/edit',
    path: '/guides/$guideId/entries/$entryId/edit',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/faq': {
      id: '/faq'
      path: '/faq'
      fullPath: '/faq'
      preLoaderRoute: typeof FaqImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/guides/$guideId': {
      id: '/guides/$guideId'
      path: '/guides/$guideId'
      fullPath: '/guides/$guideId'
      preLoaderRoute: typeof GuidesGuideIdImport
      parentRoute: typeof rootRoute
    }
    '/guides/create': {
      id: '/guides/create'
      path: '/guides/create'
      fullPath: '/guides/create'
      preLoaderRoute: typeof GuidesCreateImport
      parentRoute: typeof rootRoute
    }
    '/guides/': {
      id: '/guides/'
      path: '/guides'
      fullPath: '/guides'
      preLoaderRoute: typeof GuidesIndexImport
      parentRoute: typeof rootRoute
    }
    '/guides/$guideId_/edit': {
      id: '/guides/$guideId_/edit'
      path: '/guides/$guideId/edit'
      fullPath: '/guides/$guideId/edit'
      preLoaderRoute: typeof GuidesGuideIdEditImport
      parentRoute: typeof rootRoute
    }
    '/guides/$guideId_/entries/$entryId': {
      id: '/guides/$guideId_/entries/$entryId'
      path: '/guides/$guideId/entries/$entryId'
      fullPath: '/guides/$guideId/entries/$entryId'
      preLoaderRoute: typeof GuidesGuideIdEntriesEntryIdImport
      parentRoute: typeof rootRoute
    }
    '/guides/$guideId_/entries/create': {
      id: '/guides/$guideId_/entries/create'
      path: '/guides/$guideId/entries/create'
      fullPath: '/guides/$guideId/entries/create'
      preLoaderRoute: typeof GuidesGuideIdEntriesCreateImport
      parentRoute: typeof rootRoute
    }
    '/guides/$guideId_/entries/': {
      id: '/guides/$guideId_/entries/'
      path: '/guides/$guideId/entries'
      fullPath: '/guides/$guideId/entries'
      preLoaderRoute: typeof GuidesGuideIdEntriesIndexImport
      parentRoute: typeof rootRoute
    }
    '/guides/$guideId_/entries/$entryId_/edit': {
      id: '/guides/$guideId_/entries/$entryId_/edit'
      path: '/guides/$guideId/entries/$entryId/edit'
      fullPath: '/guides/$guideId/entries/$entryId/edit'
      preLoaderRoute: typeof GuidesGuideIdEntriesEntryIdEditImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/faq': typeof FaqRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/guides/$guideId': typeof GuidesGuideIdRoute
  '/guides/create': typeof GuidesCreateRoute
  '/guides': typeof GuidesIndexRoute
  '/guides/$guideId/edit': typeof GuidesGuideIdEditRoute
  '/guides/$guideId/entries/$entryId': typeof GuidesGuideIdEntriesEntryIdRoute
  '/guides/$guideId/entries/create': typeof GuidesGuideIdEntriesCreateRoute
  '/guides/$guideId/entries': typeof GuidesGuideIdEntriesIndexRoute
  '/guides/$guideId/entries/$entryId/edit': typeof GuidesGuideIdEntriesEntryIdEditRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/faq': typeof FaqRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/guides/$guideId': typeof GuidesGuideIdRoute
  '/guides/create': typeof GuidesCreateRoute
  '/guides': typeof GuidesIndexRoute
  '/guides/$guideId/edit': typeof GuidesGuideIdEditRoute
  '/guides/$guideId/entries/$entryId': typeof GuidesGuideIdEntriesEntryIdRoute
  '/guides/$guideId/entries/create': typeof GuidesGuideIdEntriesCreateRoute
  '/guides/$guideId/entries': typeof GuidesGuideIdEntriesIndexRoute
  '/guides/$guideId/entries/$entryId/edit': typeof GuidesGuideIdEntriesEntryIdEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/faq': typeof FaqRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/guides/$guideId': typeof GuidesGuideIdRoute
  '/guides/create': typeof GuidesCreateRoute
  '/guides/': typeof GuidesIndexRoute
  '/guides/$guideId_/edit': typeof GuidesGuideIdEditRoute
  '/guides/$guideId_/entries/$entryId': typeof GuidesGuideIdEntriesEntryIdRoute
  '/guides/$guideId_/entries/create': typeof GuidesGuideIdEntriesCreateRoute
  '/guides/$guideId_/entries/': typeof GuidesGuideIdEntriesIndexRoute
  '/guides/$guideId_/entries/$entryId_/edit': typeof GuidesGuideIdEntriesEntryIdEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/faq'
    | '/login'
    | '/register'
    | '/guides/$guideId'
    | '/guides/create'
    | '/guides'
    | '/guides/$guideId/edit'
    | '/guides/$guideId/entries/$entryId'
    | '/guides/$guideId/entries/create'
    | '/guides/$guideId/entries'
    | '/guides/$guideId/entries/$entryId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/faq'
    | '/login'
    | '/register'
    | '/guides/$guideId'
    | '/guides/create'
    | '/guides'
    | '/guides/$guideId/edit'
    | '/guides/$guideId/entries/$entryId'
    | '/guides/$guideId/entries/create'
    | '/guides/$guideId/entries'
    | '/guides/$guideId/entries/$entryId/edit'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/faq'
    | '/login'
    | '/register'
    | '/guides/$guideId'
    | '/guides/create'
    | '/guides/'
    | '/guides/$guideId_/edit'
    | '/guides/$guideId_/entries/$entryId'
    | '/guides/$guideId_/entries/create'
    | '/guides/$guideId_/entries/'
    | '/guides/$guideId_/entries/$entryId_/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  FaqRoute: typeof FaqRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  GuidesGuideIdRoute: typeof GuidesGuideIdRoute
  GuidesCreateRoute: typeof GuidesCreateRoute
  GuidesIndexRoute: typeof GuidesIndexRoute
  GuidesGuideIdEditRoute: typeof GuidesGuideIdEditRoute
  GuidesGuideIdEntriesEntryIdRoute: typeof GuidesGuideIdEntriesEntryIdRoute
  GuidesGuideIdEntriesCreateRoute: typeof GuidesGuideIdEntriesCreateRoute
  GuidesGuideIdEntriesIndexRoute: typeof GuidesGuideIdEntriesIndexRoute
  GuidesGuideIdEntriesEntryIdEditRoute: typeof GuidesGuideIdEntriesEntryIdEditRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  FaqRoute: FaqRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  GuidesGuideIdRoute: GuidesGuideIdRoute,
  GuidesCreateRoute: GuidesCreateRoute,
  GuidesIndexRoute: GuidesIndexRoute,
  GuidesGuideIdEditRoute: GuidesGuideIdEditRoute,
  GuidesGuideIdEntriesEntryIdRoute: GuidesGuideIdEntriesEntryIdRoute,
  GuidesGuideIdEntriesCreateRoute: GuidesGuideIdEntriesCreateRoute,
  GuidesGuideIdEntriesIndexRoute: GuidesGuideIdEntriesIndexRoute,
  GuidesGuideIdEntriesEntryIdEditRoute: GuidesGuideIdEntriesEntryIdEditRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/faq",
        "/login",
        "/register",
        "/guides/$guideId",
        "/guides/create",
        "/guides/",
        "/guides/$guideId_/edit",
        "/guides/$guideId_/entries/$entryId",
        "/guides/$guideId_/entries/create",
        "/guides/$guideId_/entries/",
        "/guides/$guideId_/entries/$entryId_/edit"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/faq": {
      "filePath": "faq.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/guides/$guideId": {
      "filePath": "guides/$guideId.tsx"
    },
    "/guides/create": {
      "filePath": "guides/create.tsx"
    },
    "/guides/": {
      "filePath": "guides/index.tsx"
    },
    "/guides/$guideId_/edit": {
      "filePath": "guides/$guideId_.edit.tsx"
    },
    "/guides/$guideId_/entries/$entryId": {
      "filePath": "guides/$guideId_/entries/$entryId.tsx"
    },
    "/guides/$guideId_/entries/create": {
      "filePath": "guides/$guideId_/entries/create.tsx"
    },
    "/guides/$guideId_/entries/": {
      "filePath": "guides/$guideId_/entries/index.tsx"
    },
    "/guides/$guideId_/entries/$entryId_/edit": {
      "filePath": "guides/$guideId_/entries/$entryId_.edit.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
